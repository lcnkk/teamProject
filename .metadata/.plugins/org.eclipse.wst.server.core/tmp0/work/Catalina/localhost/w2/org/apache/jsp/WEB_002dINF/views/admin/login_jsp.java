/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-11-13 06:23:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인 페이지</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.bundle.min.js\"/>\r\n");
      out.write("<style>\r\n");
      out.write("   \r\n");
      out.write("   html,\r\n");
      out.write("   body {\r\n");
      out.write("     height: 100%;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   body {\r\n");
      out.write("     display: flex;\r\n");
      out.write("     align-items: center;\r\n");
      out.write("     padding-top: 40px;\r\n");
      out.write("     padding-bottom: 40px;\r\n");
      out.write("     background-color: #f5f5f5;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .form-signin {\r\n");
      out.write("     width: 100%;\r\n");
      out.write("     max-width: 330px;\r\n");
      out.write("     padding: 15px;\r\n");
      out.write("     margin: auto;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .form-signin .checkbox {\r\n");
      out.write("     font-weight: 400;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .form-signin .form-floating:focus-within {\r\n");
      out.write("     z-index: 2;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .form-signin input[type=\"email\"] {\r\n");
      out.write("     margin-bottom: -1px;\r\n");
      out.write("     border-bottom-right-radius: 0;\r\n");
      out.write("     border-bottom-left-radius: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .form-signin input[type=\"password\"] {\r\n");
      out.write("     margin-bottom: 10px;\r\n");
      out.write("     border-top-left-radius: 0;\r\n");
      out.write("     border-top-right-radius: 0;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"text-center\">\r\n");
      out.write("   <main class=\"form-signin\">\r\n");
      out.write("      <form action=\"login.jsp\" method=\"post\">\r\n");
      out.write("     	 <img class=\"mb-4\" src=\"resources/image/admin/login_logo.png\" alt=\"\" width=\"300\" height=\"300\">\r\n");
      out.write("     	 \r\n");
      out.write("         <div class=\"form-floating\">\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"id\" onkeyup='print1()' placeholder=\"Id\">\r\n");
      out.write("            <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Password\">\r\n");
      out.write("         </div>\r\n");
      out.write("         \r\n");
      out.write("         <div class=\"checkbox mb-3\">\r\n");
      out.write("            <label>\r\n");
      out.write("               <input type=\"checkbox\" value=\"remember-me\"> 아이디 저장\r\n");
      out.write("            </label>\r\n");
      out.write("         </div>\r\n");
      out.write("         <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">로그인</button>\r\n");
      out.write("         <div id='result'></div>\r\n");
      out.write("         <h3 style=\"text-align: center; margin-top:30px;\"><a href=\"dashboard.mdo\">대시보드</a></h3><br></br>\r\n");
      out.write("         <h1></h1>\r\n");
      out.write("      </form>\r\n");
      out.write("   </main>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
