<?xml version="1.0" encoding="UTF-8"?>

<!-- MyBatis 다운 파일 PDF 에서 붙여넣은 내용입니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
				
<!-- MySQL 에 테스트용 테이블 Sample 테이블 CRUD SQL문 작성-->

<!-- mapper를 루트 엘리먼트로 사용합니다. -->
<mapper namespace="SampleDAO">
	
	<!-- resultMap
  		- select 한 결과가 조인과 같은 효과로 필드명과 컬럼이 다른 경우에 사용합니다.
  		- sequence는 id로 주어야 합니다.
  		
  		result property="변수이름" column="컬럼명"
		 작성한 Java 파일과 데이터베이스 컬럼명과 다를 경우 매칭하는 태그입니다.
		<resultMap id="list에서 호출할 이름" type="typeAlias 에서 지정한 빈 이름">
			<result property="VO에서 작성한 멤버 변수 이름" column="데이터베이스에서 지정한 컬럼 이름" />
		</resultMap>
	 -->
	 
	<resultMap type="sample" id="test">
		<id property="num" column="num"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/> 
	</resultMap>
	 
	 
	<!-- id : DAO에서 호출하는 이름 -->
	<!-- parameterType : 구문에서 인자로 넘어오는 데이터 타입 -->
		<!-- #{} 받아온 데이터가 getter가 있는 경우 멤버변수나 키 값을 이용하여 값을 저장 -->
	<!-- resultMap : 반환 레코드를 저장합니다. -->
		<!-- setter가 존재하는 경우 멤버 변수의 이름과 일치하는 컬럼명의 데이터를 반환 -->
		<!-- $ : 보안상의 이유가 있으므로 인젝션을 하는 경우 문제가 발생할 수 있음 -->
		<!-- # : 타입에 맞춰 ""로 감싼 값이 출력 -->
    
    <!-- id를 사용하여 DAO에서 호출합니다. resultMap에 반환 레코드를 저장합니다. --> 
<!-- 데이터 삽입 
		mybatis-config.xml 파일에서 alias를 test로 작성함  -->
	<insert id="insertSample" parameterType="sample">
     <!-- 특수문자는 태그로 감싸야하므로 특수문자가 들어가는 경우 <! [CDATA[ SQL문 ]] >  -->
        INSERT INTO sample (TITLE, CONTENT) 
        VALUES(#{ title }, #{ content });
    </insert>

<!-- 데이터 수정  --> 
    <update id="updateSample" parameterType="sample">
        UPDATE sample
        SET NUM=#{ num }, TITLE=#{ title }, CONTENT=#{ content }
        WHERE num=#{ num }
    </update>

<!-- 데이터 삭제  --> 
    <delete id="deleteSample" parameterType="sample">
        DELETE FROM sample
        WHERE num=#{ num }
    </delete>

<!-- 데이터 조회 --> 
    <select id="getSample" resultType="sample" parameterType="sample">
        SELECT * FROM sample
        WHERE num=#{ num }
    </select>

 
<!-- 데이터 목록 조회 resultType으로 작성해도 됩니다.-->
    <select id="getSampleList" resultMap="test" parameterType="sample">
        SELECT * FROM sample
    </select>
</mapper>